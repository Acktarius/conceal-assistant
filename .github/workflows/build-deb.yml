name: Build Debian Package

on:
  release:
    types: [created, published, released]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.2.4)'
        required: true
        default: 'v1.2.4'

jobs:
  build-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Create Debian package structure
        run: |
          # Set version based on trigger type
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "Building package for version: $VERSION"
          VERSION_NO_V=${VERSION#v}
          PACKAGE_NAME="conceal-assistant"
          
          # Create package directory structure
          mkdir -p debian-package/DEBIAN
          mkdir -p debian-package/opt/conceal-assistant
          mkdir -p debian-package/opt/conceal-toolbox
          mkdir -p debian-package/etc/systemd/system
          
          # Copy DEBIAN control files from repository
          cp -r launcher/DEBIAN/* debian-package/DEBIAN/
          
          # Update version in control file
          sed -i "s/PACKAGE_VERSION/$VERSION_NO_V/" debian-package/DEBIAN/control
          
          # Set correct permissions
          chmod 644 debian-package/DEBIAN/control
          chmod +x debian-package/DEBIAN/{preinst,postinst,prerm,postrm}
          
          # Copy application files to /opt/conceal-assistant
          find . -maxdepth 1 ! -name 'debian-package' ! -name '.' -exec cp -r {} debian-package/opt/conceal-assistant/ \;
          
          # Copy service file directly to systemd directory
          cp data/ccx-assistant.service.template debian-package/etc/systemd/system/ccx-assistant.service
          
          # Copy launcher script from repository
          cp launcher/ccx-assistant_firefox.sh debian-package/opt/conceal-toolbox/
          chmod +x debian-package/opt/conceal-toolbox/ccx-assistant_firefox.sh

      - name: Build Debian package
        run: |
          # Set version based on trigger type
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "Building package for version: $VERSION"
          VERSION_NO_V=${VERSION#v}
          dpkg-deb --build debian-package conceal-assistant_${VERSION_NO_V}_all.deb
          
          # Generate checksums
          sha256sum conceal-assistant_${VERSION_NO_V}_all.deb > conceal-assistant_${VERSION_NO_V}_all.deb.sha256
          md5sum conceal-assistant_${VERSION_NO_V}_all.deb > conceal-assistant_${VERSION_NO_V}_all.deb.md5

      - name: Upload Debian package to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./conceal-assistant_${{ github.event.release.tag_name }}_all.deb
          asset_name: conceal-assistant_${{ github.event.release.tag_name }}_all.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload SHA256 checksum
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./conceal-assistant_${{ github.event.release.tag_name }}_all.deb.sha256
          asset_name: conceal-assistant_${{ github.event.release.tag_name }}_all.deb.sha256
          asset_content_type: text/plain

      - name: Upload MD5 checksum
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./conceal-assistant_${{ github.event.release.tag_name }}_all.deb.md5
          asset_name: conceal-assistant_${{ github.event.release.tag_name }}_all.deb.md5
          asset_content_type: text/plain

      - name: Upload artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: |
            ./conceal-assistant_*.deb
            ./conceal-assistant_*.deb.sha256
            ./conceal-assistant_*.deb.md5 